[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ayrat Aymetov",
    "section": "",
    "text": "I am a graduate student at Baruch College pursuing a Master’s degree in Statistics with a Data Science track. My expected graduation date is the end of May 2025. I have a Bachelor’s degree in Computer Science with a minor in Data Science and Computational Mathematics from Brooklyn College. I am seeking employment as a Data Scientist or Data Analyst.\n\n\n\nMaster’s degree from Baruch College\n\n\n\n\n\nBachelor’s degree from Brooklyn College"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "",
    "text": "This analysis leverages data from the National Transit Database (NTD) to provide insights into the financial and operational performance of various transit agencies in the United States for the year 2022. By focusing on key metrics such as farebox revenues, total unlinked passenger trips (UPT), vehicle miles traveled (VRM), and operational expenses, we aim to evaluate the efficiency and effectiveness of transit systems in serving their communities.\nThe analysis draws on three primary data sources: the 2022 Fare Revenue table, the latest Monthly Ridership tables, and the 2022 Operating Expenses reports. While the data may reflect some post-pandemic irregularities, the focus of this project is not on long-term forecasting but rather on a snapshot of transit performance during a pivotal year in the industry. Through this exploration, we will identify trends, highlight successful transit systems, and underscore areas where improvements may be needed."
  },
  {
    "objectID": "mp01.html#task-1---creating-syntatic-names.-rebaming-a-column-uza-name-to-metro_area",
    "href": "mp01.html#task-1---creating-syntatic-names.-rebaming-a-column-uza-name-to-metro_area",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Task 1 - Creating Syntatic Names. Rebaming a column: UZA Name to metro_area",
    "text": "Task 1 - Creating Syntatic Names. Rebaming a column: UZA Name to metro_area\n\nUSAGE &lt;- USAGE |&gt;\n  rename(metro_area = `UZA Name`)\n\ncolnames(USAGE)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"        \"VRM\"       \n\n\nThe Mode column is also helpful, but it uses a set of codes that aren’t interpretable. To make life easier for ourselves, let’s use a case_when statement to transform this into something we can make sense of."
  },
  {
    "objectID": "mp01.html#task-2-recoding-the-mode-column",
    "href": "mp01.html#task-2-recoding-the-mode-column",
    "title": "Mini-Project #01: Fiscal Characteristics of Major US Public Transit Systems",
    "section": "Task 2: Recoding the Mode column",
    "text": "Task 2: Recoding the Mode column\nThese are unique code in column “Mode”\n\nunique_modes &lt;- USAGE |&gt;\n  distinct(Mode)\n\nprint(unique_modes)\n\n# A tibble: 18 × 1\n   Mode \n   &lt;chr&gt;\n 1 DR   \n 2 FB   \n 3 MB   \n 4 SR   \n 5 TB   \n 6 VP   \n 7 CB   \n 8 RB   \n 9 LR   \n10 YR   \n11 MG   \n12 CR   \n13 AR   \n14 TR   \n15 HR   \n16 IP   \n17 PB   \n18 CC   \n\n\nOn the NTD website we can find the interpretations of these codes: Alaska Railroad (AR) Cable Car (CC) Commuter Rail (CR) Heavy Rail (HR) Hybrid Rail (YR) Inclined Plane (IP) Light Rail (LR) Monorail/Automated Guideway (MG) Streetcar Rail (SR) Aerial Tramway (TR) Commuter Bus (CB) Bus (MB) Bus Rapid Transit (RB) Demand Response (DR) Ferryboat (FB) Jitney (JT) Público (PB) Trolleybus (TB) Vanpool (VP)\nNow we can replace codes with corresponding interpretations in both tables USAGE and FINANCIALS:\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode = case_when(\n    Mode == \"AR\" ~ \"Alaska Railroad\", \n    Mode == \"CC\" ~ \"Cable Car\", \n    Mode == \"CR\" ~ \"Commuter Rail\", \n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"YR\" ~ \"Hybrid Rail\", \n    Mode == \"IP\" ~ \"Inclined Plane\", \n    Mode == \"LR\" ~ \"Light Rail\", \n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\", \n    Mode == \"SR\" ~ \"Streetcar Rail\", \n    Mode == \"TR\" ~ \"Aerial Tramway\", \n    Mode == \"CB\" ~ \"Commuter Bus\", \n    Mode == \"MB\" ~ \"Bus\", \n    Mode == \"RB\" ~ \"Bus Rapid Transit\", \n    Mode == \"DR\" ~ \"Demand Response\", \n    Mode == \"FB\" ~ \"Ferryboat\", \n    Mode == \"JT\" ~ \"Jitney\", \n    Mode == \"PB\" ~ \"Público\", \n    Mode == \"TB\" ~ \"Trolleybus\", \n    Mode == \"VP\" ~ \"Vanpool\", \n    TRUE ~ \"Unknown\"  # Default for any unrecognized mode\n  ))\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"AR\" ~ \"Alaska Railroad\", \n    Mode == \"CC\" ~ \"Cable Car\", \n    Mode == \"CR\" ~ \"Commuter Rail\", \n    Mode == \"HR\" ~ \"Heavy Rail\", \n    Mode == \"YR\" ~ \"Hybrid Rail\", \n    Mode == \"IP\" ~ \"Inclined Plane\", \n    Mode == \"LR\" ~ \"Light Rail\", \n    Mode == \"MG\" ~ \"Monorail/Automated Guideway\", \n    Mode == \"SR\" ~ \"Streetcar Rail\", \n    Mode == \"TR\" ~ \"Aerial Tramway\", \n    Mode == \"CB\" ~ \"Commuter Bus\", \n    Mode == \"MB\" ~ \"Bus\", \n    Mode == \"RB\" ~ \"Bus Rapid Transit\", \n    Mode == \"DR\" ~ \"Demand Response\", \n    Mode == \"FB\" ~ \"Ferryboat\", \n    Mode == \"JT\" ~ \"Jitney\", \n    Mode == \"PB\" ~ \"Público\", \n    Mode == \"TB\" ~ \"Trolleybus\", \n    Mode == \"VP\" ~ \"Vanpool\", \n    TRUE ~ \"Unknown\"  # Default for any unrecognized mode\n  ))\n\nTo make the table cleaner, we might want to modify this code to unselect the ‘NTD ID’ and ;3 Mode’ columns and rename the UPT and VRM columns.\n\nUSAGE_clean &lt;- USAGE |&gt;\n  select(-`NTD ID`, -`3 Mode`) |&gt;\n  rename(\n    Unlinked_Passenger_Trips = UPT,\n    Vehicle_Revenue_Miles = VRM\n  )\n\nNow that the data is clean, I may want to create an attractive summary table of my cleaned up USAGE table using the following snippet:\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()"
  }
]